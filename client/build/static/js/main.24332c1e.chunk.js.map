{"version":3,"sources":["Context/Auth/authContext.js","Context/Contact/contactContext.js","Components/Layout/Navbar.js","Context/Alert/alterContext.js","Components/Layout/Alerts.js","Components/Contacts/ContactItem.js","Components/Layout/Spinner.js","Components/Contacts/Contacts.js","Components/Contacts/ContactForm.js","Components/Contacts/ContactFilter.js","Components/Pages/Home.js","Components/Pages/About.js","Components/Auth/Register.js","Components/Auth/Login.js","Components/Routing/PrivateRoute.js","Context/Contact/contactReducer.js","Context/types.js","Context/Contact/ContactState.js","Context/Auth/authReducer.js","utils/setAuthToken.js","Context/Auth/AuthState.js","Context/Alert/alterReducer.js","Context/Alert/AlertState.js","App.js","index.js"],"names":["authContext","createContext","contactContext","Navbar","title","icon","useContext","AuthContext","ContactContext","isAuthenticated","logoutUser","user","clearContact","authLinks","name","onClick","href","className","guestLinks","to","defaultProps","alertContext","Alerts","alerts","AlertContext","length","map","alert","key","id","type","msg","ContactItem","contact","deleteContact","setCurrent","clearCurrent","_id","email","phone","style","float","e","preventDefault","prototypes","PropTypes","object","isRequired","Spinner","Contacts","contacts","getContact","loading","filtered","useEffect","TransitionGroup","CSSTransition","timeout","classNames","ContactForm","addContact","updateContact","current","defaultState","useState","setContact","Object","assign","onChange","target","value","onSubmit","placeholder","checked","ContactFilter","filterContacts","clearFilter","text","useRef","ref","Home","loadUser","About","Register","props","setAlert","register","error","clearError","history","push","password","password2","setUser","htmlFor","minLength","Login","loginUser","PrivateRoute","Component","component","args","render","state","action","payload","filter","regex","RegExp","match","ContactState","useReducer","contactReducer","dispatch","axios","defaults","baseURL","a","get","res","data","response","config","headers","post","delete","put","Provider","children","localStorage","setItem","token","removeItem","setAuthToken","common","AuthState","initialState","getItem","authReducer","formData","header","console","log","AlertState","alertReducer","timout","uuid","setTimeout","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24332c1e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst authContext = createContext();\n\nexport default authContext;\n","import { createContext } from 'react';\n\nconst contactContext = createContext();\n\nexport default contactContext;\n","import React, { Fragment, useContext } from 'react';\nimport propTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../Context/Auth/authContext';\nimport ContactContext from '../../Context/Contact/contactContext';\n\nconst Navbar = ({ title, icon }) => {\n  const authContext = useContext(AuthContext);\n  const contactContext = useContext(ContactContext);\n\n  const { isAuthenticated, logoutUser, user } = authContext;\n  const { clearContact } = contactContext;\n\n  const onLogout = () => {\n    logoutUser();\n    clearContact();\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>你好 {user && user.name}</li>\n      <li>\n        <a onClick={onLogout} href='#!'>\n          <i className='fas fa-sign-out-alt'></i>{' '}\n          <span className='hide-sm'>登出</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <li>\n        <Link to='/'>首页</Link>\n        <Link to='/about'>关于</Link>\n        <Link to='/register'>注册</Link>\n        <Link to='/login'>登陆</Link>\n      </li>\n    </Fragment>\n  );\n  return (\n    <div className='navbar bg-primary'>\n      <h1>\n        <i className={icon} />\n        <Link to='/'>{title}</Link>\n      </h1>\n      <ul>{isAuthenticated ? authLinks : guestLinks}</ul>\n    </div>\n  );\n};\nNavbar.propTypes = {\n  title: propTypes.string.isRequired,\n  icon: propTypes.string,\n};\nNavbar.defaultProps = {\n  title: ' 联系',\n  icon: 'fas fa-id-card-alt',\n};\nexport default Navbar;\n","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../Context/Alert/alterContext';\n\nconst Alerts = () => {\n  const alerContext = useContext(AlertContext);\n\n  const { alerts } = alerContext;\n\n  return (\n    alerts.length !== 0 &&\n    alerts.map(alert => (\n      <div key={alert.id} className={`alert alert-${alert.type}`}>\n        <i className='fas fa-info-circle' /> {alert.msg}\n      </div>\n    ))\n  );\n};\n\nexport default Alerts;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../Context/Contact/contactContext';\n\nconst ContactItem = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\n\n  const { _id, name, email, phone, type } = contact;\n\n  const onDelete = e => {\n    e.preventDefault();\n    deleteContact(_id);\n    clearCurrent();\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-left text-primary'>\n        {name}\n        <span\n          style={{ float: 'right' }}\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n        >\n          {type === 'professional' ? '工作' : '生活'}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            <i className='fas fa-envelope-open' /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className='fas fa-phone' /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contact)}\n        >\n          编辑\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\n          删除\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.prototypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import React, { Fragment } from 'react';\nimport './Spinner.css';\n\nfunction Spinner() {\n  return (\n    <Fragment>\n      <div className='lds-spinner'>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Spinner;\n","import React, { useContext, useEffect, Fragment } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\n\nimport Spinner from '../Layout/Spinner';\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const { contacts, getContact, loading, filtered } = contactContext;\n\n  useEffect(() => {\n    getContact();\n    //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0) {\n    return <h4>目前暂无联系人</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup className='todo-list'>\n          {(filtered ? filtered : contacts).map(contact => (\n            <CSSTransition key={contact._id} timeout={500} classNames='item'>\n              <ContactItem contact={contact}></ContactItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../Context/Contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { addContact, updateContact, current, clearCurrent } = contactContext;\n  // Use State to deal with form\n  const defaultState = { name: '', email: '', phone: '', type: 'personal' };\n  const [contact, setContact] = useState(defaultState);\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(Object.assign(defaultState, current));\n    } else {\n      setContact(defaultState);\n    }\n    //eslint-disable-next-line\n  }, [contactContext, current]);\n  // monitor changes based on the name attribute of the inputs\n  const onChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current !== null) {\n      updateContact(contact);\n    } else {\n      // @param: Current state of contact\n      addContact(contact);\n    }\n    setContact(defaultState);\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  const { name, email, phone, type } = contact;\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? '编辑联系人' : '添加新联系人'}\n      </h2>\n      <input\n        type='text'\n        placeholder='姓名'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='邮箱'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='电话'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>联系人类别</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      生活{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />{' '}\n      工作\n      <div>\n        <input\n          type='submit'\n          value={current ? '更新联系人' : '添加联系人'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            返回\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../Context/Contact/contactContext';\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const { filterContacts, clearFilter, filtered } = contactContext;\n  const text = useRef('');\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n  const onChange = e => {\n    if (text.current.value !== '') {\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n  return (\n    <div>\n      <input ref={text} type='text' placeholder='搜索...' onChange={onChange} />\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","import React, { useContext, useEffect } from 'react';\nimport Contacts from '../Contacts/Contacts';\nimport ContactForm from '../Contacts/ContactForm';\nimport ContactFilter from '../Contacts/ContactFilter';\n\nimport AuthContext from '../../Context/Auth/authContext';\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n\n    //eslint-disable-next-line\n  }, []);\n  return (\n    <div className='grid-2'>\n      <div>\n        <ContactForm></ContactForm>\n      </div>\n      <div>\n        <ContactFilter></ContactFilter>\n        <Contacts></Contacts>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1>关于本站</h1>\n      <p className='my-1'>\n        本站是基于React,Express,MongoDB构建的练手项目，不可用于生产\n      </p>\n      <p className='bg-dark p'>\n        <strong>版本:</strong>1.0.0\n      </p>\n      <p className='bg-dark p'>\n        <strong>作者:</strong>若宇\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../Context/Alert/alterContext';\nimport AuthContext from '../../Context/Auth/authContext';\n\nconst Register = props => {\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  const authContext = useContext(AuthContext);\n  const { register, error, clearError, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n    if (error === 'The email has already existed') {\n      setAlert('该用户已存在', 'danger');\n      clearError();\n    }\n    //eslint-disable-next-line\n  }, [error, props.history, isAuthenticated]);\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    switch (true) {\n      case !name:\n        return setAlert('请输入姓名', 'danger');\n      case !email:\n        return setAlert('请输入邮箱', 'danger');\n      case !password:\n        return setAlert('请输入密码', 'danger');\n      case password !== password2:\n        return setAlert('两次密码不相同', 'danger');\n      default:\n        return register({ name, email, password });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        用户<span className='text-primary'>注册</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='name'>姓名</label>\n          <input type='text' name='name' value={name} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='email'>邮箱</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>密码</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n            minLength='6'\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password2'>确认密码</label>\n          <input\n            type='password'\n            name='password2'\n            value={password2}\n            onChange={onChange}\n            minLength='6'\n          />\n        </div>\n        <input\n          type='submit'\n          value='注册'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../Context/Alert/alterContext';\nimport AuthContext from '../../Context/Auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  const authContext = useContext(AuthContext);\n  const { loginUser, error, clearError, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n    if (error === 'Invaild Credentials for Email') {\n      setAlert('该邮箱不存在', 'danger');\n      clearError();\n    }\n    if (error === 'Invalid Credentials for Password') {\n      setAlert('密码错误', 'danger');\n      clearError();\n    }\n    //eslint-disable-next-line\n  }, [error, props.history, isAuthenticated]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!email) {\n      setAlert('请输入邮箱', 'danger');\n    } else if (!password) {\n      setAlert('请输入密码', 'danger');\n    } else {\n      loginUser({ email, password });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        用户<span className='text-primary'>登陆</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>邮箱</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>密码</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <input\n          type='submit'\n          value='登陆'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../Context/Auth/authContext';\n\nfunction PrivateRoute({ component: Component, ...args }) {\n  const authContext = useContext(AuthContext);\n\n  const { isAuthenticated, loading } = authContext;\n  return (\n    <Route\n      {...args}\n      render={props =>\n        !isAuthenticated && loading ? (\n          <Redirect to='/login' />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import {\n  GET_CONTACT,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACT:\n      return { ...state, contacts: action.payload, loading: false };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false,\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact._id !== action.payload\n        ),\n        loading: false,\n      };\n    case CLEAR_CONTACT:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        current: null,\n        error: null,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact._id === action.payload._id ? action.payload : contact\n        ),\n        current: null,\n        loading: false,\n      };\n    case SET_CURRENT:\n      return { ...state, current: action.payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          if (contact.name.match(regex) || contact.email.match(regex)) {\n            return contact;\n          }\n        }),\n      };\n    case CLEAR_FILTER:\n      return { ...state, filtered: null };\n    case CONTACT_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n","// Contacts\nexport const GET_CONTACT = 'GET_CONTACT';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const CLEAR_CONTACT = 'CLEAR_CONTACT';\nexport const FILTER_CONTACTS = 'FILTER_CONTACTS';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const CONTACT_ERROR = 'CONTACT_ERROR';\n// Alert\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n// Auth\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGINOUT = 'LOGINOUT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACT,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  axios.defaults.baseURL = 'http://localhost:4000';\n  //GET CONTACT\n  const getContact = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n\n      dispatch({ type: GET_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  //ADD CONTACT\n  const addContact = async contact => {\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n  //SET CURRENT CONTACT\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  //CLEAR CURRENT CONTACT\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT, payload: null });\n  };\n  //DELETE CONTACT\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n\n      dispatch({ type: DELETE_CONTACT, payload: id });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  //UPDATE CONTACT\n  const updateContact = async contact => {\n    try {\n      const config = { headers: { 'Content-Type': 'application/json' } };\n      const res = await axios.put(\n        `/api/contacts/${contact._id}`,\n        contact,\n        config\n      );\n      dispatch({ type: UPDATE_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  //CLEAR CONTACTS\n  const clearContact = () => {\n    dispatch({ type: CLEAR_CONTACT });\n  };\n\n  //FILTER CONTACTS\n  const filterContacts = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n  //CLEAR FILTER\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n  return (\n    <contactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        getContact,\n        addContact,\n        updateContact,\n        clearContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        filterContacts,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </contactContext.Provider>\n  );\n};\nexport default ContactState;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGINOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      //PASS THE TOKEN TO THE LOCALSTORAGE\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGINOUT:\n      //REMOVE THE TOKEN FROM THE LOCALSTORAGE\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        user: null,\n        loading: true,\n        error: action.payload,\n      };\n    case CLEAR_ERRORS:\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGINOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: false,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.getItem('token'));\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({ type: USER_LOADED, payload: res.data });\n    } catch (error) {\n      dispatch({ type: AUTH_ERROR });\n    }\n  };\n  // Register User\n  const register = async formData => {\n    const config = { header: { 'content-type': 'application/json' } };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      //PASS THE TOKEN ONCE SUCCESS\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      console.log(error.response);\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\n    }\n  };\n\n  // Login User\n  const loginUser = async formData => {\n    const config = { header: { 'content-type': 'application/json' } };\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      //PASS THE TOKEN ONCE SUCCESS\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      console.log(error.response);\n      dispatch({ type: LOGIN_FAIL, payload: error.response.data.msg });\n    }\n  };\n\n  //Logout\n  const logoutUser = () => dispatch({ type: LOGINOUT });\n  //Clear Errors\n  const clearError = () => dispatch({ type: CLEAR_ERRORS });\n  return (\n    <authContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        register,\n        loadUser,\n        loginUser,\n        logoutUser,\n        clearError,\n      }}\n    >\n      {props.children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== action.payload);\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport alertContext from './alterContext';\nimport alertReducer from './alterReducer';\n\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timout = 3500) => {\n    const id = uuid();\n    dispatch({ type: SET_ALERT, payload: { id, msg, type } });\n    setTimeout(() => {\n      dispatch({ type: REMOVE_ALERT, payload: id });\n    }, timout);\n  };\n  return (\n    <alertContext.Provider value={{ alerts: state, setAlert }}>\n      {props.children}\n    </alertContext.Provider>\n  );\n};\n\nexport default AlertState;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nimport Navbar from './Components/Layout/Navbar';\nimport Alerts from './Components/Layout/Alerts';\nimport Home from './Components/Pages/Home';\nimport About from './Components/Pages/About';\nimport Register from './Components/Auth/Register';\nimport Login from './Components/Auth/Login';\nimport PrivateRoute from './Components/Routing/PrivateRoute';\n\nimport ContactState from './Context/Contact/ContactState';\nimport AuthState from './Context/Auth/AuthState';\nimport AlertState from './Context/Alert/AlertState';\n\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.getItem('token'));\n}\nconst App = () => {\n  return (\n    <AuthState>\n      <ContactState>\n        <AlertState>\n          <Router>\n            <Fragment>\n              <Navbar />\n              <div className='container'>\n                <Alerts />\n                <Switch>\n                  <PrivateRoute exact path='/' component={Home} />\n                  <Route exact path='/about' component={About} />\n                  <Route exact path='/register' component={Register} />\n                  <Route exact path='/login' component={Login} />\n                </Switch>\n              </div>\n            </Fragment>\n          </Router>\n        </AlertState>\n      </ContactState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}