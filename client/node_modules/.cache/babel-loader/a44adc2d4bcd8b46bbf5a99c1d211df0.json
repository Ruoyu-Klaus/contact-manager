{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case GET_CONTACT:\n      return { ...state,\n        contacts: action.payload,\n        loading: false\n      };\n\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n\n          if (contact.name.match(regex) || contact.email.match(regex)) {\n            return contact;\n          }\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACT","state","action","type","contacts","payload","loading","filter","contact","id","map","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,EASEC,WATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKH,WAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAA7B;AAAsCC,QAAAA,OAAO,EAAE;AAA/C,OAAP;;AACF,SAAKd,WAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAAtB,OAAP;;AACF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACRC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OADzB;AAFL,OAAP;;AAMF,SAAKT,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAmBF,OAAO,IAClCA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAD5C;AAFL,OAAP;;AAMF,SAAKd,WAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAA5B,OAAP;;AACF,SAAKV,aAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYU,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKd,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELW,QAAAA,QAAQ,EAAEX,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAsBC,OAAO,IAAI;AACzC,gBAAMK,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEZ,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;;AACA,cAAIG,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAAjC,EAA6D;AAC3D,mBAAOL,OAAP;AACD;AACF,SALS;AAFL,OAAP;;AASF,SAAKV,YAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYW,QAAAA,QAAQ,EAAE;AAAtB,OAAP;;AACF,SAAKb,aAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG;AAA1B,OAAP;;AACF;AACE,aAAOJ,KAAP;AAtCJ;AAwCD,CAzCD","sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  GET_CONTACT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_CONTACT:\n      return { ...state, contacts: action.payload, loading: false };\n    case ADD_CONTACT:\n      return { ...state, contacts: [...state.contacts, action.payload] };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        ),\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n    case SET_CURRENT:\n      return { ...state, current: action.payload };\n    case CLEAR_CURRENT:\n      return { ...state, current: null };\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          if (contact.name.match(regex) || contact.email.match(regex)) {\n            return contact;\n          }\n        }),\n      };\n    case CLEAR_FILTER:\n      return { ...state, filtered: null };\n    case CONTACT_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}