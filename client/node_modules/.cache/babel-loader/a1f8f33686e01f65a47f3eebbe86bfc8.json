{"ast":null,"code":"var _jsxFileName = \"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACT, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, CLEAR_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n  axios.defaults.baseURL = 'http://localhost:4000'; //GET CONTACT\n\n  const getContact = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; //ADD CONTACT\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; //SET CURRENT CONTACT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //CLEAR CURRENT CONTACT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT,\n      payload: null\n    });\n  }; //UPDATE CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //DELETE CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //CLEAR CONTACTS\n\n\n  const clearContact = () => {\n    dispatch({\n      type: CLEAR_CONTACT\n    });\n  }; //FILTER CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //CLEAR FILTER\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      getContact,\n      addContact,\n      updateContact,\n      clearContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuid","contactContext","contactReducer","GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","CLEAR_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","defaults","baseURL","getContact","res","get","type","payload","data","response","msg","addContact","contact","config","headers","post","setCurrent","clearCurrent","updateContact","deleteContact","id","clearContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACT,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  CLEAR_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  axios.defaults.baseURL = 'http://localhost:4000';\n  //GET CONTACT\n  const getContact = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n\n      dispatch({ type: GET_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n\n  //ADD CONTACT\n  const addContact = async contact => {\n    const config = { headers: { 'Content-Type': 'application/json' } };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n    }\n  };\n  //SET CURRENT CONTACT\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n  //CLEAR CURRENT CONTACT\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT, payload: null });\n  };\n  //UPDATE CONTACT\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n  //DELETE CONTACT\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n  //CLEAR CONTACTS\n  const clearContact = () => {\n    dispatch({ type: CLEAR_CONTACT });\n  };\n\n  //FILTER CONTACTS\n  const filterContacts = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n  //CLEAR FILTER\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n  return (\n    <contactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        getContact,\n        addContact,\n        updateContact,\n        clearContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        filterContacts,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </contactContext.Provider>\n  );\n};\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}