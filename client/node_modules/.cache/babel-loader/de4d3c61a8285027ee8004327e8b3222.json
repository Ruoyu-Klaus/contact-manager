{"ast":null,"code":"import React,{useContext,useEffect,Fragment}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import ContactContext from'../../Context/Contact/contactContext';import ContactItem from'./ContactItem';import Spinner from'../Layout/Spinner';var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,getContact=contactContext.getContact,loading=contactContext.loading,filtered=contactContext.filtered;useEffect(function(){getContact();//eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0){return/*#__PURE__*/React.createElement(\"h4\",null,\"\\u76EE\\u524D\\u6682\\u65E0\\u8054\\u7CFB\\u4EBA\");}return/*#__PURE__*/React.createElement(Fragment,null,contacts!==null&&!loading?/*#__PURE__*/React.createElement(TransitionGroup,{className:\"todo-list\"},(filtered?filtered:contacts).map(function(contact){return/*#__PURE__*/React.createElement(CSSTransition,{key:contact._id,timeout:500,classNames:\"item\"},/*#__PURE__*/React.createElement(ContactItem,{contact:contact}));})):/*#__PURE__*/React.createElement(Spinner,null));};export default Contacts;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/Contacts.js"],"names":["React","useContext","useEffect","Fragment","CSSTransition","TransitionGroup","ContactContext","ContactItem","Spinner","Contacts","contactContext","contacts","getContact","loading","filtered","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,SAA5B,CAAuCC,QAAvC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGT,UAAU,CAACK,cAAD,CAAjC,CADqB,GAEbK,CAAAA,QAFa,CAE+BD,cAF/B,CAEbC,QAFa,CAEHC,UAFG,CAE+BF,cAF/B,CAEHE,UAFG,CAESC,OAFT,CAE+BH,cAF/B,CAESG,OAFT,CAEkBC,QAFlB,CAE+BJ,cAF/B,CAEkBI,QAFlB,CAIrBZ,SAAS,CAAC,UAAM,CACdU,UAAU,GACV;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAID,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAA7C,CAAgD,CAC9C,mBAAO,2EAAP,CACD,CAED,mBACE,oBAAC,QAAD,MACGJ,QAAQ,GAAK,IAAb,EAAqB,CAACE,OAAtB,cACC,oBAAC,eAAD,EAAiB,SAAS,CAAC,WAA3B,EACG,CAACC,QAAQ,CAAGA,QAAH,CAAcH,QAAvB,EAAiCK,GAAjC,CAAqC,SAAAC,OAAO,qBAC3C,oBAAC,aAAD,EAAe,GAAG,CAAEA,OAAO,CAACC,GAA5B,CAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,eACE,oBAAC,WAAD,EAAa,OAAO,CAAED,OAAtB,EADF,CAD2C,EAA5C,CADH,CADD,cASC,oBAAC,OAAD,MAVJ,CADF,CAeD,CA5BD,CA8BA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { useContext, useEffect, Fragment } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\n\nimport Spinner from '../Layout/Spinner';\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const { contacts, getContact, loading, filtered } = contactContext;\n\n  useEffect(() => {\n    getContact();\n    //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0) {\n    return <h4>目前暂无联系人</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup className='todo-list'>\n          {(filtered ? filtered : contacts).map(contact => (\n            <CSSTransition key={contact._id} timeout={500} classNames='item'>\n              <ContactItem contact={contact}></ContactItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}