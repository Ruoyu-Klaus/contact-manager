{"ast":null,"code":"var _jsxFileName = \"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/Contacts.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\nimport Spinner from '../Layout/Spinner';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    getContact,\n    loading,\n    filtered\n  } = contactContext;\n  useEffect(() => {\n    getContact(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }\n    }, \"\\u76EE\\u524D\\u6682\\u65E0\\u8054\\u7CFB\\u4EBA\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, contacts !== null && !loading ? /*#__PURE__*/React.createElement(TransitionGroup, {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, (filtered ? filtered : contacts).map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/Contacts.js"],"names":["React","useContext","useEffect","Fragment","CSSTransition","TransitionGroup","ContactContext","ContactItem","Spinner","Contacts","contactContext","contacts","getContact","loading","filtered","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGT,UAAU,CAACK,cAAD,CAAjC;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,UAAZ;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,MAA8CJ,cAApD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAID,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,KAAK,IAAb,IAAqB,CAACE,OAAtB,gBACC,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACC,QAAQ,GAAGA,QAAH,GAAcH,QAAvB,EAAiCK,GAAjC,CAAqCC,OAAO,iBAC3C,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADD,gBASC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AAeD,CA5BD;;AA8BA,eAAeR,QAAf","sourcesContent":["import React, { useContext, useEffect, Fragment } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\n\nimport Spinner from '../Layout/Spinner';\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const { contacts, getContact, loading, filtered } = contactContext;\n\n  useEffect(() => {\n    getContact();\n    //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return <h4>目前暂无联系人</h4>;\n  }\n\n  return (\n    <Fragment>\n      {contacts !== null && !loading ? (\n        <TransitionGroup className='todo-list'>\n          {(filtered ? filtered : contacts).map(contact => (\n            <CSSTransition key={contact._id} timeout={500} classNames='item'>\n              <ContactItem contact={contact}></ContactItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      ) : (\n        <Spinner />\n      )}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}