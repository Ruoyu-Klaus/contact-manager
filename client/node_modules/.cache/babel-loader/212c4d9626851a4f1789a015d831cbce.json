{"ast":null,"code":"import _slicedToArray from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import{v4 as uuid}from'uuid';import alertContext from'./alterContext';import alertReducer from'./alterReducer';import{SET_ALERT,REMOVE_ALERT}from'../types';var AlertState=function AlertState(props){var initialState=[];var _useReducer=useReducer(alertReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Set Alert\nvar setAlert=function setAlert(msg,type){var timout=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3500;var id=uuid();dispatch({type:SET_ALERT,payload:{id:id,msg:msg,type:type}});setTimeout(function(){dispatch({type:REMOVE_ALERT,payload:id});},timout);};return/*#__PURE__*/React.createElement(alertContext.Provider,{value:{alerts:state,setAlert:setAlert}},props.children);};export default AlertState;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Alert/AlertState.js"],"names":["React","useReducer","v4","uuid","alertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timout","id","payload","setTimeout","alerts","children"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,EAAE,GAAIC,CAAAA,IAAf,KAA2B,MAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OAASC,SAAT,CAAoBC,YAApB,KAAwC,UAAxC,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAD0B,gBAGAT,UAAU,CAACI,YAAD,CAAeK,YAAf,CAHV,4CAGnBC,KAHmB,iBAGZC,QAHY,iBAK1B;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,IAAN,CAA8B,IAAlBC,CAAAA,MAAkB,2DAAT,IAAS,CAC7C,GAAMC,CAAAA,EAAE,CAAGd,IAAI,EAAf,CACAS,QAAQ,CAAC,CAAEG,IAAI,CAAET,SAAR,CAAmBY,OAAO,CAAE,CAAED,EAAE,CAAFA,EAAF,CAAMH,GAAG,CAAHA,GAAN,CAAWC,IAAI,CAAJA,IAAX,CAA5B,CAAD,CAAR,CACAI,UAAU,CAAC,UAAM,CACfP,QAAQ,CAAC,CAAEG,IAAI,CAAER,YAAR,CAAsBW,OAAO,CAAED,EAA/B,CAAD,CAAR,CACD,CAFS,CAEPD,MAFO,CAAV,CAGD,CAND,CAOA,mBACE,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEI,MAAM,CAAET,KAAV,CAAiBE,QAAQ,CAARA,QAAjB,CAA9B,EACGJ,KAAK,CAACY,QADT,CADF,CAKD,CAlBD,CAoBA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport alertContext from './alterContext';\nimport alertReducer from './alterReducer';\n\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timout = 3500) => {\n    const id = uuid();\n    dispatch({ type: SET_ALERT, payload: { id, msg, type } });\n    setTimeout(() => {\n      dispatch({ type: REMOVE_ALERT, payload: id });\n    }, timout);\n  };\n  return (\n    <alertContext.Provider value={{ alerts: state, setAlert }}>\n      {props.children}\n    </alertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}