{"ast":null,"code":"import _defineProperty from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import AlertContext from'../../Context/Alert/alterContext';import AuthContext from'../../Context/Auth/authContext';var Login=function Login(props){var alertContext=useContext(AlertContext);var setAlert=alertContext.setAlert;var authContext=useContext(AuthContext);var loginUser=authContext.loginUser,error=authContext.error,clearError=authContext.clearError,isAuthenticated=authContext.isAuthenticated;useEffect(function(){if(isAuthenticated){props.history.push('/');}if(error==='Invaild Credentials for Email'){setAlert('该邮箱不存在','danger');clearError();}if(error==='Invalid Credentials for Password'){setAlert('密码错误','danger');clearError();}//eslint-disable-next-line\n},[error,props.history,isAuthenticated]);var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var email=user.email,password=user.password;var onChange=function onChange(e){return setUser(_objectSpread({},user,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(!email){setAlert('请输入邮箱','danger');}else if(!password){setAlert('请输入密码','danger');}else{loginUser({email:email,password:password});}};return/*#__PURE__*/React.createElement(\"div\",{className:\"form-container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"\\u7528\\u6237\",/*#__PURE__*/React.createElement(\"span\",{className:\"text-primary\"},\"\\u767B\\u9646\")),/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"},\"\\u90AE\\u7BB1\"),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",name:\"email\",value:email,onChange:onChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"},\"\\u5BC6\\u7801\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",value:password,onChange:onChange})),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"\\u767B\\u9646\",className:\"btn btn-primary btn-block\"})));};export default Login;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","setAlert","authContext","loginUser","error","clearError","isAuthenticated","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"+ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,CACrB,GAAMC,CAAAA,YAAY,CAAGN,UAAU,CAACE,YAAD,CAA/B,CADqB,GAEbK,CAAAA,QAFa,CAEAD,YAFA,CAEbC,QAFa,CAIrB,GAAMC,CAAAA,WAAW,CAAGR,UAAU,CAACG,WAAD,CAA9B,CAJqB,GAKbM,CAAAA,SALa,CAKqCD,WALrC,CAKbC,SALa,CAKFC,KALE,CAKqCF,WALrC,CAKFE,KALE,CAKKC,UALL,CAKqCH,WALrC,CAKKG,UALL,CAKiBC,eALjB,CAKqCJ,WALrC,CAKiBI,eALjB,CAOrBX,SAAS,CAAC,UAAM,CACd,GAAIW,eAAJ,CAAqB,CACnBP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EACD,CACD,GAAIJ,KAAK,GAAK,+BAAd,CAA+C,CAC7CH,QAAQ,CAAC,QAAD,CAAW,QAAX,CAAR,CACAI,UAAU,GACX,CACD,GAAID,KAAK,GAAK,kCAAd,CAAkD,CAChDH,QAAQ,CAAC,MAAD,CAAS,QAAT,CAAR,CACAI,UAAU,GACX,CACD;AACD,CAbQ,CAaN,CAACD,KAAD,CAAQL,KAAK,CAACQ,OAAd,CAAuBD,eAAvB,CAbM,CAAT,CAPqB,cAsBGb,QAAQ,CAAC,CAC/BgB,KAAK,CAAE,EADwB,CAE/BC,QAAQ,CAAE,EAFqB,CAAD,CAtBX,wCAsBdC,IAtBc,eAsBRC,OAtBQ,kBA0BbH,CAAAA,KA1Ba,CA0BOE,IA1BP,CA0BbF,KA1Ba,CA0BNC,QA1BM,CA0BOC,IA1BP,CA0BND,QA1BM,CA4BrB,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,QAAIF,CAAAA,OAAO,kBAAMD,IAAN,oBAAaG,CAAC,CAACC,MAAF,CAASC,IAAtB,CAA6BF,CAAC,CAACC,MAAF,CAASE,KAAtC,GAAX,EAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAJ,CAAC,CAAI,CACpBA,CAAC,CAACK,cAAF,GACA,GAAI,CAACV,KAAL,CAAY,CACVR,QAAQ,CAAC,OAAD,CAAU,QAAV,CAAR,CACD,CAFD,IAEO,IAAI,CAACS,QAAL,CAAe,CACpBT,QAAQ,CAAC,OAAD,CAAU,QAAV,CAAR,CACD,CAFM,IAEA,CACLE,SAAS,CAAC,CAAEM,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAT,CACD,CACF,CATD,CAWA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,0DACI,4BAAM,SAAS,CAAC,cAAhB,iBADJ,CADF,cAIE,4BAAM,QAAQ,CAAEQ,QAAhB,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,OAAO,CAAC,OAAf,iBADF,cAEE,6BAAO,IAAI,CAAC,OAAZ,CAAoB,IAAI,CAAC,OAAzB,CAAiC,KAAK,CAAET,KAAxC,CAA+C,QAAQ,CAAEI,QAAzD,EAFF,CADF,cAKE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,OAAO,CAAC,UAAf,iBADF,cAEE,6BACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEH,QAHT,CAIE,QAAQ,CAAEG,QAJZ,EAFF,CALF,cAcE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAC,cAFR,CAGE,SAAS,CAAC,2BAHZ,EAdF,CAJF,CADF,CA2BD,CApED,CAsEA,cAAef,CAAAA,KAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../Context/Alert/alterContext';\nimport AuthContext from '../../Context/Auth/authContext';\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const { setAlert } = alertContext;\n\n  const authContext = useContext(AuthContext);\n  const { loginUser, error, clearError, isAuthenticated } = authContext;\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/');\n    }\n    if (error === 'Invaild Credentials for Email') {\n      setAlert('该邮箱不存在', 'danger');\n      clearError();\n    }\n    if (error === 'Invalid Credentials for Password') {\n      setAlert('密码错误', 'danger');\n      clearError();\n    }\n    //eslint-disable-next-line\n  }, [error, props.history, isAuthenticated]);\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const { email, password } = user;\n\n  const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!email) {\n      setAlert('请输入邮箱', 'danger');\n    } else if (!password) {\n      setAlert('请输入密码', 'danger');\n    } else {\n      loginUser({ email, password });\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <h1>\n        用户<span className='text-primary'>登陆</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div className='form-group'>\n          <label htmlFor='email'>邮箱</label>\n          <input type='email' name='email' value={email} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='password'>密码</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <input\n          type='submit'\n          value='登陆'\n          className='btn btn-primary btn-block'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}