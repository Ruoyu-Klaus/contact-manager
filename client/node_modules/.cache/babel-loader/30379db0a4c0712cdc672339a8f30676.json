{"ast":null,"code":"var _jsxFileName = \"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/Contacts.js\";\nimport React, { useContext, useEffect, Fragment } from 'react';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered\n  } = contactContext;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, (filtered ? filtered : contacts).map(contact => /*#__PURE__*/React.createElement(ContactItem, {\n    key: contact.id,\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/Contacts.js"],"names":["React","useContext","useEffect","Fragment","ContactContext","ContactItem","Contacts","contactContext","contacts","filtered","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,cAAc,GAAGN,UAAU,CAACG,cAAD,CAAjC;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBF,cAA/B;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACE,QAAQ,GAAGA,QAAH,GAAcD,QAAvB,EAAiCE,GAAjC,CAAqCC,OAAO,iBAC3C,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACC,EAA1B;AAA8B,IAAA,OAAO,EAAED,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAOD,CAXD;;AAaA,eAAeL,QAAf","sourcesContent":["import React, { useContext, useEffect, Fragment } from 'react';\nimport ContactContext from '../../Context/Contact/contactContext';\nimport ContactItem from './ContactItem';\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const { contacts, filtered } = contactContext;\n\n  return (\n    <Fragment>\n      {(filtered ? filtered : contacts).map(contact => (\n        <ContactItem key={contact.id} contact={contact}></ContactItem>\n      ))}\n    </Fragment>\n  );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}