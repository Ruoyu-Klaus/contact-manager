{"ast":null,"code":"import _defineProperty from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import ContactContext from'../../Context/Contact/contactContext';var ContactForm=function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,updateContact=contactContext.updateContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent;// Use State to deal with form\nvar defaultState={name:'',email:'',phone:'',type:'personal'};var _useState=useState(defaultState),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];useEffect(function(){if(current!==null){setContact(Object.assign(defaultState,current));}else{setContact(defaultState);}//eslint-disable-next-line\n},[contactContext,current]);// monitor changes based on the name attribute of the inputs\nvar onChange=function onChange(e){return setContact(_objectSpread({},contact,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current!==null){updateContact(contact);}else{// @param: Current state of contact\naddContact(contact);}setContact(defaultState);};var clearAll=function clearAll(){clearCurrent();};var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary\"},current?'编辑联系人':'添加新联系人'),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"\\u59D3\\u540D\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"email\",placeholder:\"\\u90AE\\u7BB1\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"\\u7535\\u8BDD\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/React.createElement(\"h5\",null,\"\\u8054\\u7CFB\\u4EBA\\u7C7B\\u522B\"),/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type==='personal',onChange:onChange}),' ',\"\\u751F\\u6D3B\",' ',/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type==='professional',onChange:onChange}),' ',\"\\u5DE5\\u4F5C\",/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:current?'更新联系人':'添加联系人',className:\"btn btn-primary btn-block\"})),current&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll},\"\\u8FD4\\u56DE\")));};export default ContactForm;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","current","clearCurrent","defaultState","name","email","phone","type","contact","setContact","Object","assign","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"+ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,cAAc,CAAGJ,UAAU,CAACE,cAAD,CAAjC,CADwB,GAEhBG,CAAAA,UAFgB,CAEqCD,cAFrC,CAEhBC,UAFgB,CAEJC,aAFI,CAEqCF,cAFrC,CAEJE,aAFI,CAEWC,OAFX,CAEqCH,cAFrC,CAEWG,OAFX,CAEoBC,YAFpB,CAEqCJ,cAFrC,CAEoBI,YAFpB,CAGxB;AACA,GAAMC,CAAAA,YAAY,CAAG,CAAEC,IAAI,CAAE,EAAR,CAAYC,KAAK,CAAE,EAAnB,CAAuBC,KAAK,CAAE,EAA9B,CAAkCC,IAAI,CAAE,UAAxC,CAArB,CAJwB,cAKMd,QAAQ,CAACU,YAAD,CALd,wCAKjBK,OALiB,eAKRC,UALQ,eAOxBd,SAAS,CAAC,UAAM,CACd,GAAIM,OAAO,GAAK,IAAhB,CAAsB,CACpBQ,UAAU,CAACC,MAAM,CAACC,MAAP,CAAcR,YAAd,CAA4BF,OAA5B,CAAD,CAAV,CACD,CAFD,IAEO,CACLQ,UAAU,CAACN,YAAD,CAAV,CACD,CACD;AACD,CAPQ,CAON,CAACL,cAAD,CAAiBG,OAAjB,CAPM,CAAT,CAQA;AACA,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,QAChBJ,CAAAA,UAAU,kBAAMD,OAAN,oBAAgBK,CAAC,CAACC,MAAF,CAASV,IAAzB,CAAgCS,CAAC,CAACC,MAAF,CAASC,KAAzC,GADM,EAAlB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAH,CAAC,CAAI,CACpBA,CAAC,CAACI,cAAF,GACA,GAAIhB,OAAO,GAAK,IAAhB,CAAsB,CACpBD,aAAa,CAACQ,OAAD,CAAb,CACD,CAFD,IAEO,CACL;AACAT,UAAU,CAACS,OAAD,CAAV,CACD,CACDC,UAAU,CAACN,YAAD,CAAV,CACD,CATD,CAWA,GAAMe,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBhB,YAAY,GACb,CAFD,CA9BwB,GAkChBE,CAAAA,IAlCgB,CAkCaI,OAlCb,CAkChBJ,IAlCgB,CAkCVC,KAlCU,CAkCaG,OAlCb,CAkCVH,KAlCU,CAkCHC,KAlCG,CAkCaE,OAlCb,CAkCHF,KAlCG,CAkCIC,IAlCJ,CAkCaC,OAlCb,CAkCID,IAlCJ,CAmCxB,mBACE,4BAAM,QAAQ,CAAES,QAAhB,eACE,0BAAI,SAAS,CAAC,cAAd,EACGf,OAAO,CAAG,OAAH,CAAa,QADvB,CADF,cAIE,6BACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,cAFd,CAGE,IAAI,CAAC,MAHP,CAIE,KAAK,CAAEG,IAJT,CAKE,QAAQ,CAAEQ,QALZ,EAJF,cAWE,6BACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,cAFd,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAEP,KAJT,CAKE,QAAQ,CAAEO,QALZ,EAXF,cAkBE,6BACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,cAFd,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAEN,KAJT,CAKE,QAAQ,CAAEM,QALZ,EAlBF,cAyBE,+DAzBF,cA0BE,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,UAHR,CAIE,OAAO,CAAEL,IAAI,GAAK,UAJpB,CAKE,QAAQ,CAAEK,QALZ,EA1BF,CAgCK,GAhCL,gBAiCK,GAjCL,cAkCE,6BACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAC,cAHR,CAIE,OAAO,CAAEL,IAAI,GAAK,cAJpB,CAKE,QAAQ,CAAEK,QALZ,EAlCF,CAwCK,GAxCL,6BA0CE,4CACE,6BACE,IAAI,CAAC,QADP,CAEE,KAAK,CAAEX,OAAO,CAAG,OAAH,CAAa,OAF7B,CAGE,SAAS,CAAC,2BAHZ,EADF,CA1CF,CAiDGA,OAAO,eACN,4CACE,8BAAQ,SAAS,CAAC,yBAAlB,CAA4C,OAAO,CAAEiB,QAArD,iBADF,CAlDJ,CADF,CA2DD,CA9FD,CAgGA,cAAerB,CAAAA,WAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../Context/Contact/contactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const { addContact, updateContact, current, clearCurrent } = contactContext;\n  // Use State to deal with form\n  const defaultState = { name: '', email: '', phone: '', type: 'personal' };\n  const [contact, setContact] = useState(defaultState);\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(Object.assign(defaultState, current));\n    } else {\n      setContact(defaultState);\n    }\n    //eslint-disable-next-line\n  }, [contactContext, current]);\n  // monitor changes based on the name attribute of the inputs\n  const onChange = e =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current !== null) {\n      updateContact(contact);\n    } else {\n      // @param: Current state of contact\n      addContact(contact);\n    }\n    setContact(defaultState);\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  const { name, email, phone, type } = contact;\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primary'>\n        {current ? '编辑联系人' : '添加新联系人'}\n      </h2>\n      <input\n        type='text'\n        placeholder='姓名'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='邮箱'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='电话'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>联系人类别</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      生活{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />{' '}\n      工作\n      <div>\n        <input\n          type='submit'\n          value={current ? '更新联系人' : '添加联系人'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            返回\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}