{"ast":null,"code":"var _jsxFileName = \"/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGINOUT, CLEAR_ERRORS } from '../types';\nimport setAuthToken from '../../utils/setAuthToken';\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.getItem('token'));\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      header: {\n        'content-type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config); //PASS THE TOKEN ONCE SUCCESS\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      console.log(error.response);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const loginUser = () => console.log('loin user'); //Logout\n\n\n  const logOut = () => console.log('logout'); //Clear Errors\n\n\n  const clearError = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/React.createElement(authContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      register,\n      loadUser,\n      loginUser,\n      logOut,\n      clearError\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Context/Auth/AuthState.js"],"names":["React","useReducer","axios","authContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGINOUT","CLEAR_ERRORS","setAuthToken","defaults","baseURL","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","user","loading","error","state","dispatch","loadUser","register","formData","config","header","res","post","type","payload","data","console","log","response","msg","loginUser","logOut","clearError","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGINOUT,\n  CLEAR_ERRORS,\n} from '../types';\n\nimport setAuthToken from '../../utils/setAuthToken';\n\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.getItem('token'));\n    }\n  };\n  // Register User\n  const register = async formData => {\n    const config = { header: { 'content-type': 'application/json' } };\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      //PASS THE TOKEN ONCE SUCCESS\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      loadUser();\n    } catch (error) {\n      console.log(error.response);\n      dispatch({ type: REGISTER_FAIL, payload: error.response.data.msg });\n    }\n  };\n\n  // Login User\n  const loginUser = () => console.log('loin user');\n  //Logout\n  const logOut = () => console.log('logout');\n  //Clear Errors\n  const clearError = () => dispatch({ type: CLEAR_ERRORS });\n  return (\n    <authContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        register,\n        loadUser,\n        loginUser,\n        logOut,\n        clearError,\n      }}\n    >\n      {props.children}\n    </authContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}