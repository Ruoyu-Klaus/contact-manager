{"ast":null,"code":"import React,{useContext}from'react';import PropTypes from'prop-types';import ContactContext from'../../Context/Contact/contactContext';var ContactItem=function ContactItem(_ref){var contact=_ref.contact;var contactContext=useContext(ContactContext);var deleteContact=contactContext.deleteContact,setCurrent=contactContext.setCurrent,clearCurrent=contactContext.clearCurrent;var _id=contact._id,name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onDelete=function onDelete(e){e.preventDefault();deleteContact(_id);clearCurrent();};return/*#__PURE__*/React.createElement(\"div\",{className:\"card bg-light\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-left text-primary\"},name,/*#__PURE__*/React.createElement(\"span\",{style:{float:'right'},className:'badge '+(type==='professional'?'badge-success':'badge-primary')},type==='professional'?'工作':'生活')),/*#__PURE__*/React.createElement(\"ul\",{className:\"list\"},email&&/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-envelope-open\"}),\" \",email),phone&&/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-phone\"}),\" \",phone)),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-dark btn-sm\",onClick:function onClick(){return setCurrent(contact);}},\"\\u7F16\\u8F91\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger btn-sm\",onClick:onDelete},\"\\u5220\\u9664\")));};ContactItem.prototypes={contact:PropTypes.object.isRequired};export default ContactItem;","map":{"version":3,"sources":["/Users/ruoyuwang/Documents/GitHub/contact-keeper/client/src/Components/Contacts/ContactItem.js"],"names":["React","useContext","PropTypes","ContactContext","ContactItem","contact","contactContext","deleteContact","setCurrent","clearCurrent","_id","name","email","phone","type","onDelete","e","preventDefault","float","prototypes","object","isRequired"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACnC,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAACE,cAAD,CAAjC,CADmC,GAE3BI,CAAAA,aAF2B,CAEiBD,cAFjB,CAE3BC,aAF2B,CAEZC,UAFY,CAEiBF,cAFjB,CAEZE,UAFY,CAEAC,YAFA,CAEiBH,cAFjB,CAEAG,YAFA,IAI3BC,CAAAA,GAJ2B,CAIOL,OAJP,CAI3BK,GAJ2B,CAItBC,IAJsB,CAION,OAJP,CAItBM,IAJsB,CAIhBC,KAJgB,CAIOP,OAJP,CAIhBO,KAJgB,CAITC,KAJS,CAIOR,OAJP,CAITQ,KAJS,CAIFC,IAJE,CAIOT,OAJP,CAIFS,IAJE,CAMnC,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CACpBA,CAAC,CAACC,cAAF,GACAV,aAAa,CAACG,GAAD,CAAb,CACAD,YAAY,GACb,CAJD,CAMA,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,0BAAI,SAAS,CAAC,wBAAd,EACGE,IADH,cAEE,4BACE,KAAK,CAAE,CAAEO,KAAK,CAAE,OAAT,CADT,CAEE,SAAS,CACP,UACCJ,IAAI,GAAK,cAAT,CAA0B,eAA1B,CAA4C,eAD7C,CAHJ,EAOGA,IAAI,GAAK,cAAT,CAA0B,IAA1B,CAAiC,IAPpC,CAFF,CADF,cAaE,0BAAI,SAAS,CAAC,MAAd,EACGF,KAAK,eACJ,2CACE,yBAAG,SAAS,CAAC,sBAAb,EADF,KAC0CA,KAD1C,CAFJ,CAMGC,KAAK,eACJ,2CACE,yBAAG,SAAS,CAAC,cAAb,EADF,KACkCA,KADlC,CAPJ,CAbF,cAyBE,0CACE,8BACE,SAAS,CAAC,qBADZ,CAEE,OAAO,CAAE,yBAAML,CAAAA,UAAU,CAACH,OAAD,CAAhB,EAFX,iBADF,cAOE,8BAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAEU,QAAnD,iBAPF,CAzBF,CADF,CAuCD,CAnDD,CAqDAX,WAAW,CAACe,UAAZ,CAAyB,CACvBd,OAAO,CAAEH,SAAS,CAACkB,MAAV,CAAiBC,UADH,CAAzB,CAIA,cAAejB,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactContext from '../../Context/Contact/contactContext';\n\nconst ContactItem = ({ contact }) => {\n  const contactContext = useContext(ContactContext);\n  const { deleteContact, setCurrent, clearCurrent } = contactContext;\n\n  const { _id, name, email, phone, type } = contact;\n\n  const onDelete = e => {\n    e.preventDefault();\n    deleteContact(_id);\n    clearCurrent();\n  };\n\n  return (\n    <div className='card bg-light'>\n      <h3 className='text-left text-primary'>\n        {name}\n        <span\n          style={{ float: 'right' }}\n          className={\n            'badge ' +\n            (type === 'professional' ? 'badge-success' : 'badge-primary')\n          }\n        >\n          {type === 'professional' ? '工作' : '生活'}\n        </span>\n      </h3>\n      <ul className='list'>\n        {email && (\n          <li>\n            <i className='fas fa-envelope-open' /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className='fas fa-phone' /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className='btn btn-dark btn-sm'\n          onClick={() => setCurrent(contact)}\n        >\n          编辑\n        </button>\n        <button className='btn btn-danger btn-sm' onClick={onDelete}>\n          删除\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.prototypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n"]},"metadata":{},"sourceType":"module"}